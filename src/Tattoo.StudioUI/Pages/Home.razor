@page "/"
@using Radzen.Blazor
@using Microsoft.AspNetCore.Components.WebAssembly.Services
@using Radzen.Blazor.Rendering
@using System.Text.Json
@using System.Globalization
@using Tattoo.StudioUI.Components.Dialogs
@using Tattoo.StudioUI.Components.Layout
@using Tattoo.StudioUI.Helpers
@using Tattoo.StudioUI.Models.Dialogs
@using Tattoo.StudioUI.Models.Forms
@using Tattoo.StudioUI.Models.Forms.Enum
@using Tattoo.StudioUI.Models.Requests
@using Tattoo.StudioUI.Security
@using Tattoo.StudioUI.Services
@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime;
@inject LazyAssemblyLoader loader;
@inject TooltipService TooltipService;


<RadzenRow class="text-center p-4">
    <RadzenColumn class="home-presentation-layout">
        <h1>Welcome to InkVibes Tattoo Studio</h1>
        <p>Ink Your Story, Own Your Art</p>

        <p>Welcome, the premier destination for high-quality tattoos. Our team of expert artists is dedicated to turning your vision into reality with unparalleled craftsmanship. We're committed to excellence in every piece, ensuring a unique and personalized experience. Discover the difference at InkVibes Tattoo, where artistry meets precision in a premier setting.</p>
        <RadzenButton ButtonStyle="ButtonStyle.Warning" Style="font-family: 'MaterialCustom'; font-weight: 600; margin-bottom: 11px;" Variant="Variant.Filled" class="" Text="Find us" Click="@(() => ScrollToSection("section4"))" />

    </RadzenColumn>
</RadzenRow>

<div id="section1" class="section slide-in-blurred-bottom">
    
    <h2 class="pb-2">Our Commitment to Quality</h2>
    <p>At our tattoo shop, cleanliness is our top priority. We take meticulous care to ensure a pristine and hygienic environment for our clients. Your safety and satisfaction are paramount to us, and our commitment to sanitation reflects our dedication to providing the best tattoo experience possible.</p>

    <div class="service-items">
        <div class="service-item">
            <i class="material-icons">health_and_safety</i>
            <h3>Our Needles</h3>
            <p>All tattoo needles used at InkVibes Tattoo are of the highest industry standards, pre-sterilized, and single-use.</p>
        </div>
        <div class="service-item">
            <i class="material-icons">palette</i>
            <h3>Our Ink</h3>
            <p>All ink used at InkVibes Tattoo is of the highest industry standards, 100% vegan-friendly, and non-toxic.</p>
        </div>
        <div class="service-item">
            <i class="material-icons">handyman</i>
            <h3>Our Process</h3>
            <p>We adhere to the highest health and hygiene standards, assuring your safety and ours. All procedures are performed with single-use equipment.</p>
        </div>
        <div class="service-item">
            <i class="material-icons">cleaning_services</i>
            <h3>Our Safety</h3>
            <p>All equipment and work areas used to perform procedures at InkVibes Tattoo are thoroughly sterilized and cleaned between clients, assuring you peace of mind.</p>
        </div>
    </div>
</div>

<div id="section2" class="section">
    <h1>The Artist</h1>
    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="1rem">
        <RadzenImage Path="/css/Images/artist.webp" class="artist-image-layout"/>
        <RadzenStack Gap="0">
            <RadzenText TextStyle="TextStyle.H2" Class="rz-mb-0">Adrian</RadzenText>
            <RadzenText TextStyle="TextStyle.Body1">Diverse Styles</RadzenText>
            <RadzenText TextStyle="TextStyle.Body2">Hailing from Havana, Cuba Adrian started tattoo at just 16 years old. Even though getting supplies was always a challenge, and basic tattoo materials would take months to arrive he never let that stop him from chasing his dreams. After tattooing in Cuba for over 7 years, in late '22 Adrian made his way to Florida. After meeting the owners of Emphasis, he quickly showed that he belonged working alongside the wildly talented artists at the shop. Adrian has a diverse skill set and no project is too big or too small for our newest addition to the team.</RadzenText>
        </RadzenStack>
    </RadzenStack>

</div>

<div id="section3" class="section">
    <h1>Gallery</h1>
    <GaleryTattoo />
    <RadzenButton ButtonStyle="ButtonStyle.Warning" Style="font-family: 'MaterialCustom'; font-weight: 600;" Variant="Variant.Filled" class="mt-4" Text="BOOK NOW" Click="OnClickBookNow" />

</div>

<div id="section4" class="section">
    <h1>Contact us</h1>
    <RadzenStack Style="align-items: center !important;" Gap="0">
        <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-2 rz-my-0">ADDRESS</RadzenText>
        <RadzenText TextStyle="TextStyle.Body1"><b>@_emailAdress.ValueDescription</b></RadzenText>
        <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0">OPENING HOURS</RadzenText>
        <RadzenText TextStyle="TextStyle.Body1"><b>Monday - Sunday: 10am - 7pm</b></RadzenText>
    </RadzenStack>
    <div class="container-fluid">
        <div class="row pt-4">
            <div class="col">
                <div id="map" style="height: 32rem;"></div>

            </div>
        </div>
    </div>
    <div class="social-links-integrated">
        <a href="@_phoneFacebook.ValueDescription" target="_blank"><img src="https://img.icons8.com/ios-filled/24/ffffff/facebook-new.png" alt="Facebook" /></a>
        <a href="@_tiktokInstagram.Value" target="_blank"><img src="https://img.icons8.com/ios-filled/24/ffffff/tiktok.png" alt="TikTok" /></a>
        <a href="@_tiktokInstagram.ValueDescription" target="_blank"><img src="https://img.icons8.com/ios-filled/24/ffffff/instagram-new.png" alt="Instagram" /></a>
        <a href=@($"tel:{@_phoneFacebook.Value}") class="button button-icon"><img src="https://img.icons8.com/ios-filled/24/ffffff/phone.png" alt="Phone Icon" /></a>
        <a href="https://www.google.com/maps/dir/?api=1&origin=current+location&destination=@lat.ToString("F8", System.Globalization.CultureInfo.InvariantCulture),@lng.ToString("F8", System.Globalization.CultureInfo.InvariantCulture)" class="button button-icon map-button" target="_blank"><img src="https://img.icons8.com/ios-filled/24/ffffff/map-pin.png" alt="Map Icon" /> Get Directions</a>

    </div>
</div>

<div id="section5" class="section">
    <h1>FAQ</h1>
    <FAQTattoo/>
    <!-- Contenido de la sección FAQ -->
</div>
<RadzenRow class="footer-copyright">
    <RadzenColumn Size="4" class="desktop-only">
        <h6>Powered by <b>CANDISOFT</b></h6>
    </RadzenColumn>
    <RadzenColumn Size="4" class="desktop-only">
        <h6 class="desktop-only">© 2024 All rights reserved | <b>Ink Vibes Tattoo Studio</b></h6>
    </RadzenColumn>
    <RadzenColumn Size="8" class="mobile-only">
        <h8 class="mobile-only">© 2024 All rights reserved | <b>Ink Vibes Studio</b></h8>
    </RadzenColumn>
    <RadzenColumn Size="4">
        <div class="social-links-footer">
            <a href="@_phoneFacebook.ValueDescription" target="_blank"><img src="https://img.icons8.com/ios-filled/24/ffffff/facebook-new.png" alt="Facebook" /></a>
            <a href="@_tiktokInstagram.Value" target="_blank"><img src="https://img.icons8.com/ios-filled/24/ffffff/tiktok.png" alt="TikTok" /></a>
            <a href="@_tiktokInstagram.ValueDescription" target="_blank"><img src="https://img.icons8.com/ios-filled/24/ffffff/instagram-new.png" alt="Instagram" /></a>
        </div>
    </RadzenColumn>
</RadzenRow>


@code {

    private async Task ScrollToSection(string sectionId)
    {
        await JSRuntime.InvokeVoidAsync("scrollToSection", sectionId);
    }

    [Inject] private IConfigValueService _configValueService { get; set; }
    [Inject] private NotificationService NotificationService { get; set; }
    [Inject] private DialogService DialogService { get; set; }
    [Inject] private GlobalState stateService { get; set; }

    private DotNetObjectReference<Home> objRef;
    private ConfigValueDto _ConfigValue = new ConfigValueDto();
    private ConfigValueDto _tiktokInstagram = new ConfigValueDto();
    private ConfigValueDto _phoneFacebook = new ConfigValueDto();
    private ConfigValueDto _emailAdress = new ConfigValueDto();

    private ConfigValueDto _baseConfigValue = new ConfigValueDto();
    private ConfigValueDto _basetiktokInstagram = new ConfigValueDto();
    private ConfigValueDto _basephoneFacebook = new ConfigValueDto();
    private ConfigValueDto _baseemailAdress = new ConfigValueDto();
    private readonly CacheValueType _customValueType = CacheValueType.StudioLocation;
    double lat;
    double lng;
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        _tiktokInstagram.ValueType = CacheValueType.TikTokInstagram;
        _phoneFacebook.ValueType = CacheValueType.PhoneFacebook;
        _emailAdress.ValueType = CacheValueType.EmailAddress;
        objRef = DotNetObjectReference.Create(this);
        await LoadConfigValues();
        lat = 42.6977; // Valor por defecto
        lng = 23.3219; // Valor por defecto
        int zoom = 3;

        // Si hay coordenadas guardadas previamente, usarlas para centrar el mapa y agregar marcador
        if (!string.IsNullOrEmpty(_ConfigValue.Value))
        {
            var coords = _ConfigValue.Value.Split(',');
            if (coords.Length == 2 &&
                double.TryParse(coords[0].Trim(), NumberStyles.Float, CultureInfo.InvariantCulture, out lat) &&
                double.TryParse(coords[1].Trim(), NumberStyles.Float, CultureInfo.InvariantCulture, out lng))
            {
                zoom = 15; // Ajustar el zoom si hay coordenadas guardadas
            }
        }

        // Inicializar el mapa con las coordenadas
        await JSRuntime.InvokeVoidAsync("initializeMap", lat, lng, zoom);

        // Agregar marcador si hay coordenadas guardadas
        if (!string.IsNullOrEmpty(_ConfigValue.Value))
        {
            await JSRuntime.InvokeVoidAsync("addMarker", lat, lng, $"Ink Vibes Tattoo");
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {

        }
    }

    async Task OnClickBookNow()
    {

            ReservationDto data = await DialogService.OpenAsync<AddAppointmentPage>("Book Now",
                       new Dictionary<string, object> { { "Start", DateTime.Now }, { "End", DateTime.Now } });


    }

    private static Home instance;

    public Home()
    {
        instance = this;
    }

    [JSInvokable]
    public static Task MapClicked(double lat, double lng)
    {
        return Task.CompletedTask;
    }

    public void Dispose()
    {
        objRef?.Dispose();
    }
    /// <summary>
    /// Data Load and Actions
    /// </summary>
    private async Task LoadConfigValues()
    {
        var response = await _configValueService.GetBasicsConfigValuesAsync();
        if (response.IsSuccess)
        {
            var parsedResponse = response?.Data as IEnumerable<ConfigValueDto>;
            _ConfigValue = parsedResponse?.FirstOrDefault(cv=>cv.ValueType == CacheValueType.StudioLocation) ?? new ConfigValueDto();
            _emailAdress =  parsedResponse?.FirstOrDefault(cv=>cv.ValueType == CacheValueType.EmailAddress) ?? new ConfigValueDto();
            _tiktokInstagram =  parsedResponse?.FirstOrDefault(cv=>cv.ValueType == CacheValueType.TikTokInstagram) ?? new ConfigValueDto();
            _phoneFacebook =  parsedResponse?.FirstOrDefault(cv=>cv.ValueType == CacheValueType.PhoneFacebook) ?? new ConfigValueDto();
            stateService.GlobalLocation = _ConfigValue.DeepClone() ?? new ConfigValueDto();

        }
        else
        {
            NotificationService.Notify(NotificationSeverity.Error, "Failed to Load", response.ErrorMessage, 4000);
        }
    }

    // protected async Task<bool> AddConfigValue()
    // {
    //     _ConfigValue.ValueType = _customValueType;

    //     var response = _ConfigValue.Id == 0 ? await _configValueService.AddConfigValueAsync(_ConfigValue) : await _configValueService.UpdateConfigValueAsync(_ConfigValue);
    //     var InsertedConfigValue = response.Data as ConfigValueDto;
    //     if (response.IsSuccess && (InsertedConfigValue != null))
    //     {
    //         NotificationService.Notify(NotificationSeverity.Success, "Saved", "Success Operation", 4000);
    //     }

    //     return HasSuccessResponse(response);
    // }

    private async Task BusyDialog()
    {
        await DialogService.OpenAsync<BusyLoading>(
            "",
            null,
            new DialogOptions()
                {
                    ShowTitle = false,
                    Style = "display: contents;background-color: #ff000000 !important;border-radius: 50px 50px 50px 50px!important;min-height:auto;min-width:auto;width:auto",
                    CloseDialogOnEsc = false
                }
        );
    }

    private bool HasSuccessResponse(ResponseAdapterDto response)
    {
        if (!response.IsSuccess)
        {
            NotificationService.Notify(NotificationSeverity.Error, "Error: ", response.ErrorMessage, 4000);
            return false;
        }
        return true;
    }
}
