@page "/storeproducts"
@using Microsoft.JSInterop
@using Radzen.Blazor
@using Microsoft.AspNetCore.Components.WebAssembly.Services
@using Radzen.Blazor.Rendering
@using System.Text.Json
@using Tattoo.Management.Models.Forms
@using Tattoo.Management.Security
@inherits LayoutComponentBase
@* @inject TooltipService tooltipService; *@
@inject IJSRuntime JSRuntime;
@* @inject NotificationService _notificationService;
@inject DialogService DialogService; *@
@inject LazyAssemblyLoader loader;

<NotranslateDirective>
    <RadzenText class="main-header-layout mobile-only">
        <h3>
            Venta
        </h3>
    </RadzenText>

    <RadzenText class="main-header-layout desktop-only">
        <h3>
            Venta de Productos
        </h3>
    </RadzenText>

    <RadzenRow class="">
        <RadzenColumn class="text-start">
            <RadzenStack AlignItems="AlignItems.Start" Gap="10px" class="mt-2 mb-2 justify-content-start" Style="display:block!important;padding-left:2rem!important;">
                <RadzenCheckBox Name="All" @bind-Value=showWithZero></RadzenCheckBox>
                <RadzenLabel Component="All" class="text-white">Mostrar todos</RadzenLabel>

            </RadzenStack>
            <RadzenStack Style="width:6rem;float:inline-end;">
                
                <RadzenStack AlignItems="AlignItems.Start" Gap="10px" class="mt-2 mb-2 justify-content-start ">
                    <RadzenTextBox Change="(args)=>_MerchandiseDataSearchable = _MerchandiseData.Where(x=>x.Name.Contains(args, StringComparison.OrdinalIgnoreCase)).ToHashSet()" Placeholder="Busque aquí su producto" />

                </RadzenStack>

            </RadzenStack>
        </RadzenColumn>
        <RadzenColumn class="text-end">
            <RadzenStack Style="width:6rem;float:inline-end;">
                <RadzenStack AlignItems="AlignItems.End" Gap="10px" class="mt-2 mb-2 justify-content-end ">
                    <RadzenButton ButtonStyle="ButtonStyle.Success"  Text="VENDER" Click="@ShowDialogVender" />

                </RadzenStack>

            </RadzenStack>
        </RadzenColumn>
    </RadzenRow>

    <RadzenDataList @ref="_MerchandiseDataGridRef" class="datalist-radzen data-list-products" Data="@_MerchandiseDataSearchable.Where(p=>p.StockQuantity>0 || showWithZero)" TItem="ProductDto" PageSize="25" WrapItems="true" AllowPaging="true">
        <Template Context="product">
            <div class="image-container">
                @*
                    <RadzenDropDown FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" class="badge-priority" @bind-Value="@product.Order" Change="@(args=>OnChangeTattooOrder(args,product.Id))"
                                AllowFiltering="false" AllowClear="false" Data="@(Enumerable.Range(1,_MerchandiseData.Count()).ToList())" />
                                *@
                <RadzenLabel  Text="@product.Price.ToString()" class="badge-priority"  />
                <RadzenLabel Text="@product.StockQuantity.ToString()" class="badge-priority-stock" Style="float:right" />
                <RadzenImage Path="@(!string.IsNullOrWhiteSpace(product.MiniatureImagePath) ? $"{ImagesBaseUrl}{product.MiniatureImagePath}" : !string.IsNullOrWhiteSpace(product.ImagePath) ? $"{ImagesBaseUrl}{product.ImagePath}" :"/css/images/genericproduct.webp" )" class="product-image image-thumbnail" AlternateText="@product.Name" Click=@((args)=>ShowDialogZoomImage(args,$"{ImagesBaseUrl}{product.ImagePath}")) />
                <div class="image-overlay">
                    @* <RadzenIcon Icon=@(product.Rating == 0 ? "thumb_up_off_alt" : "thumb_up") class="icon-color-like"></RadzenIcon> *@
                    @* <p class="icon-color-like">@(product.Rating == 0 ? "" : product.Rating.ToString())</p> *@

                    @* <RadzenButton Style="background-color:rgb(0 0 0 / 0%); font-size:x-small" Click="@(args => ShowDialo(product))" Text="@product.TattooName" /> *@
                    <RadzenRow><RadzenColumn><RadzenLabel Text="@product.Name"></RadzenLabel></RadzenColumn></RadzenRow>
                        <RadzenRow>
                        <RadzenColumn>
                            <RadzenButton Icon="do_not_disturb_on" ButtonStyle="ButtonStyle.Danger" Click="@(()=>{product.TotalBuy =product.StockQuantity>0 && product.TotalBuy>0 && product.StockQuantity>=product.TotalBuy-1 ? product.TotalBuy-1:product.TotalBuy;})" Style="border-radius:50%;" Text="" />

                        </RadzenColumn>
                        <RadzenColumn>
                            <RadzenNumeric Name="Count" @bind-Value="@product.TotalBuy" class="numeric-center" Max="@product.StockQuantity" Min="0" ShowUpDown="false"/>
                        </RadzenColumn>
                        <RadzenColumn>
                            <RadzenButton Icon="add_circle" ButtonStyle="ButtonStyle.Success" Click="@(()=>{@product.TotalBuy =@product.StockQuantity>=@product.TotalBuy+1 ? @product.TotalBuy+1:@product.TotalBuy;})" Style="border-radius:50%;" Text="" />

                        </RadzenColumn>
                        </RadzenRow>

                </div>
            </div>
        </Template>
    </RadzenDataList>
</NotranslateDirective>


        

